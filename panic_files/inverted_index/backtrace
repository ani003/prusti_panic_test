  __          __        __  ___             
 |__)  _\/_  |__) |  | /__`  |   ____\/_  | 
 |      /\   |  \ \__/ .__/  |       /\   | 


Verification of 32 items...
error: [Prusti: unsupported feature] unsupported type Opaque(DefId(0:83 ~ inverted_index[317d]::tokenize::{opaque#0}), [ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:82 ~ inverted_index[317d]::tokenize::'a), 'a) })])
   --> panic_files/inverted_index/inverted_index.rs:115:1
    |
115 | / fn tokenize<'a>(input: &'a str) -> impl Iterator<Item = String> + 'a {
116 | |     input
117 | |         .split(|c: char| !c.is_alphanumeric())
118 | |         .filter(|token| !token.is_empty())
119 | |         .map(|token| token.to_lowercase())
120 | | }
    | |_^

error: [Prusti internal error] tried to encode a projection that accesses the field 0of a variant without first downcasting its enumeration std::result::Result<std::fs::File, std::io::Error>
   --> panic_files/inverted_index/inverted_index.rs:122:1
    |
122 | / fn tokenize_file<P: AsRef<Path>>(path: P) -> io::Result<BTreeSet<Stri...
123 | |     let mut buffer = Vec::new();
124 | |     File::open(path)?.read_to_end(&mut buffer)?;
125 | |     let text = String::from_utf8_lossy(&buffer);
126 | |     Ok(tokenize(&text).collect::<BTreeSet<_>>())
127 | | }
    | |_^

error: [Prusti: unsupported feature] unsupported type Opaque(DefId(0:83 ~ inverted_index[317d]::tokenize::{opaque#0}), [ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:82 ~ inverted_index[317d]::tokenize::'a), 'a) })])
   --> panic_files/inverted_index/inverted_index.rs:130:18
    |
130 |     let result = tokenize(input).collect::<BTreeSet<_>>();
    |                  ^^^^^^^^^^^^^^^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@panic_files/inverted_index/inverted_index.rs:145:21: 145:76]
   --> panic_files/inverted_index/inverted_index.rs:140:1
    |
140 | / fn args() -> io::Result<(OsString, BTreeSet<OsString>)> {
141 | |     let mut args = std::env::args_os().skip(1); // Skip the executabl...
142 | |  
143 | |     let path = args
...   |
149 | |     Ok((path, extensions))
150 | | }
    | |_^

error: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> panic_files/inverted_index/inverted_index.rs:158:18
    |
158 |         println!("    [{}] {}", number + 1, hit);
    |                  ^^^^^^^^^^^^^

error: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> panic_files/inverted_index/inverted_index.rs:173:9
    |
173 |         "Indexing {:?} files in '{}'",
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

thread 'rustc' panicked at 'DefId::expect_local: `DefId(5:2790 ~ alloc[7309]::collections::btree::set::{impl#6}::new)` isn't local', /rustc/79e50bf77928f374921a6bcafee3fcff1915f062/compiler/rustc_span/src/def_id.rs:264:43
stack backtrace:
   0: rust_begin_unwind
             at /rustc/79e50bf77928f374921a6bcafee3fcff1915f062/library/std/src/panicking.rs:493:5
   1: std::panicking::begin_panic_fmt
             at /rustc/79e50bf77928f374921a6bcafee3fcff1915f062/library/std/src/panicking.rs:435:5
   2: rustc_span::def_id::DefId::expect_local::{{closure}}
   3: prusti_interface::environment::procedure::Procedure::new
   4: prusti_interface::environment::Environment::get_procedure
   5: prusti_viper::encoder::encoder::Encoder::encode_spec_funcs
   6: prusti_viper::encoder::encoder::Encoder::encode_const_expr
   7: prusti_viper::encoder::mir_encoder::MirEncoder::encode_operand_expr
   8: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_impure_function_call
   9: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_terminator
  10: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_statement_at
  11: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_blocks_group
  12: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_loop
  13: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_blocks_group
  14: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode
  15: prusti_viper::encoder::encoder::Encoder::encode_procedure
  16: prusti_viper::encoder::encoder::Encoder::process_encoding_queue
  17: prusti_viper::verifier::Verifier::verify
  18: prusti_driver::verifier::verify
  19: <prusti_driver::callbacks::PrustiCompilerCalls as rustc_driver::Callbacks>::after_analysis
  20: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter
  21: rustc_span::with_source_map
  22: rustc_interface::interface::create_compiler_and_run
  23: scoped_tls::ScopedKey<T>::set
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.

error: internal compiler error: unexpected panic

note: Prusti or the compiler unexpectedly panicked. This is a bug.

note: We would appreciate a bug report: https://github.com/viperproject/prusti-dev/issues/new

note: Prusti version: commit e8a9345e 2021-05-19 12:46:05 UTC, built on 2021-05-27 13:44:30 UTC

query stack during panic:
end of query stack
error: aborting due to 6 previous errors

