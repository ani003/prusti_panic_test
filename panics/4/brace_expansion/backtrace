  __          __        __  ___             
 |__)  _\/_  |__) |  | /__`  |   ____\/_  | 
 |      /\   |  \ \__/ .__/  |       /\   | 


warning: unnecessary braces around method argument
   --> panic_files/brace_expansion/brace_expansion.rs:165:26
    |
165 |                 aux.push({format!("{}{}", root, string)});
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these braces
    |
    = note: `#[warn(unused_braces)]` on by default

Verification of 23 items...
error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@panic_files/brace_expansion/brace_expansion.rs:127:55: 127:84]
   --> panic_files/brace_expansion/brace_expansion.rs:115:1
    |
115 | / fn tokenize(string: &str) -> Vec<Token> {
116 | |     let mut tokens: Vec<Token> = Vec::new();
117 | |     let mut chars = string.chars();
118 | |     let mut payload = String::new();
...   |
155 | |     tokens
156 | | }
    | |_^

error: [Prusti: unsupported feature] determining the region of a dereferentiation is not supported
   --> panic_files/brace_expansion/brace_expansion.rs:159:35
    |
159 |     let mut output: Vec<String> = vec![String::new()];
    |                                   ^^^^^^^^^^^^^^^^^^^
    |
    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> panic_files/brace_expansion/brace_expansion.rs:182:18
    |
182 |         println!("{}", line);
    |                  ^^^^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@panic_files/brace_expansion/brace_expansion.rs:45:52: 45:90]
  --> panic_files/brace_expansion/brace_expansion.rs:42:5
   |
42 | /     fn from(tokens: &Vec<Token>) -> Branches {
43 | |         let mut branches = Branches::new();
44 | |         let mut tail = tokens.clone();
45 | |         while let Some(pos) = tail.iter().position(|token| { *token ==...
...  |
52 | |         branches
53 | |     }
   | |_____^

error: [Prusti: unsupported feature] the encoding of this reference copy has not been implemented
  --> panic_files/brace_expansion/brace_expansion.rs:75:33
   |
75 |             Token::Separator => SEPARATOR.to_string(),
   |                                 ^^^^^^^^^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@panic_files/brace_expansion/brace_expansion.rs:91:22: 93:18]
  --> panic_files/brace_expansion/brace_expansion.rs:81:5
   |
81 | /     fn from(branches: Branches) -> Vec<String> {
82 | |         let Branches{ tokens: token_lines } = branches;
83 | |         let mut vec: Vec<String> = Vec::new();
84 | |         let braces = { if token_lines.len() == 1 { true } else { false...
...  |
97 | |         }
98 | |     }
   | |_____^

thread 'rustc' panicked at 'not implemented: encoding of 'move _8 as std::boxed::Box<[std::string::String]> (Pointer(Unsize))'', prusti-viper/src/encoder/procedure_encoder.rs:1247:25
stack backtrace:
   0: rust_begin_unwind
             at /rustc/79e50bf77928f374921a6bcafee3fcff1915f062/library/std/src/panicking.rs:493:5
   1: core::panicking::panic_fmt
             at /rustc/79e50bf77928f374921a6bcafee3fcff1915f062/library/core/src/panicking.rs:92:14
   2: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_statement
   3: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_statement_at
   4: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_blocks_group
   5: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode
   6: prusti_viper::encoder::encoder::Encoder::encode_procedure
   7: prusti_viper::encoder::encoder::Encoder::process_encoding_queue
   8: prusti_viper::verifier::Verifier::verify
   9: prusti_driver::verifier::verify
  10: <prusti_driver::callbacks::PrustiCompilerCalls as rustc_driver::Callbacks>::after_analysis
  11: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter
  12: rustc_span::with_source_map
  13: rustc_interface::interface::create_compiler_and_run
  14: scoped_tls::ScopedKey<T>::set
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.

error: internal compiler error: unexpected panic

note: Prusti or the compiler unexpectedly panicked. This is a bug.

note: We would appreciate a bug report: https://github.com/viperproject/prusti-dev/issues/new

note: Prusti version: commit e8a9345e 2021-05-19 12:46:05 UTC, built on 2021-05-27 13:44:30 UTC

query stack during panic:
end of query stack
error: aborting due to 6 previous errors; 1 warning emitted

